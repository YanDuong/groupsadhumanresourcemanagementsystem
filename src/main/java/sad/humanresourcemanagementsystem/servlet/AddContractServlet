package sad.humanresourcemanagementsystem.servlet;

import java.io.File;
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.google.protobuf.TextFormat.ParseException;

import java.sql.Date;
import java.util.List;
import sad.humanresourcemanagementsystem.model.Contract;
import sad.humanresourcemanagementsystem.service.ContractService;
import sad.humanresourcemanagementsystem.service.ContractTypeService;
import sad.humanresourcemanagementsystem.service.StaffService;

/**
 * Servlet implementation class AddContractServlet
 */

@WebServlet(name = "AddContractServlet", urlPatterns = "/AddContractServlet")
public class AddContractServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final int SIZE_THRESHOLD   = 1024 * 1024 * 3;  // 3MB
    private static final int MAXIMUM_FILE_SIZE      = 1024 * 1024 * 40; // 40MB
    private static final int MAXIMUM_REQUEST_SIZE   = 1024 * 1024 * 50; // 50MB

    private ServletFileUpload uploader = null;
    /**
     * @see HttpServlet#HttpServlet()
     */
    public AddContractServlet() {
        super();
        // TODO Auto-generated constructor stub
    }
    
    @Override
   	public void init() throws ServletException{
   		DiskFileItemFactory factory = new DiskFileItemFactory();
   		factory.setSizeThreshold(SIZE_THRESHOLD);
           // sets temporary location to store files
           factory.setRepository(new File(System.getProperty("java.io.tmpdir")));
    
           ServletFileUpload upload = new ServletFileUpload(factory);
            
           // sets maximum size of upload file
           upload.setFileSizeMax(MAXIMUM_FILE_SIZE);
            
           // sets maximum size of request (include file + form data)
           upload.setSizeMax(MAXIMUM_REQUEST_SIZE);
   		File filesDir = (File) getServletContext().getAttribute("contractFile");
   		factory.setRepository(filesDir);
   		uploader = new ServletFileUpload(factory);
   	}
      

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String message = "";
		String error = "";	
		try {			
			String filePath = "";		
			String fileName = "";
			 String staffName = "";
			 String ctName = "";
			 String baseSalary = "";
			 double hourSalary = 0;
			 Date startDate = null, endDate = null;
			 if (!ServletFileUpload.isMultipartContent(request)) {
		           throw new ServletException("Request form is not correct!");
		        }			   		      
		    	  try {
		            // parses the request's content to extract file data		          
		            List<FileItem> formItems = uploader.parseRequest(request);		 
		            if (formItems != null && formItems.size() > 0) {
		                // iterates over form's fields
		                for (FileItem item : formItems) {
		                    // processes only fields that are not form fields
		                    if (!item.isFormField()) {
		                       fileName = new File(item.getName()).getName();	
		                        filePath = request.getServletContext().getAttribute("contractFileDir") + File.separator + fileName;
		                        File file = new File(filePath);		                      		 		                        // saves the file on disk
		                        item.write(file);
		                        request.setAttribute("message",
		                            "Upload has been done successfully!");
		                    } else {
		                    	if("staffName".equals(item.getFieldName())) {
		                    		staffName = item.getString();
		                    	}
		                    	if("cttName".equals(item.getFieldName())) {
		                    		ctName = item.getString();
		                    	}
		                    	if("hourSalary".equals(item.getFieldName())) {
		                    		hourSalary = Double.parseDouble(item.getString());
		                    	}
		                    	if("baseSalary".equals(item.getFieldName())) {
		                    		baseSalary = item.getString();
		                    	}
		                		                    	
		                    }
		                }
		            }			
			int staffId = new StaffService().getStaffIdByName(staffName);
			int cttId = new ContractTypeService().getContractTypeIdByName(ctName);
			Contract contract = new Contract();
			contract.setStaffId(staffId);
			contract.setCtId(cttId);
			contract.setFileLocation(filePath);
			contract.setSalaryHour(hourSalary);
			contract.setStartDate(startDate);
			contract.setEndDate(endDate);
			contract.setBaseSalary(baseSalary);
			contract.setFileName(fileName);
			int row = new ContractService().insertContract(contract);
			if(row != -1) {
				message += "Add successfully!";
			} else {
				error += "Add failed!";
			}
			if(message.length() > 0) {
				request.setAttribute("message", message);
			}
			if(error.length() > 0) {
				request.setAttribute("error", error);
			}
			response.sendRedirect("ManageContractServlet");
		} catch(ParseException e) {
			e.printStackTrace();
		} catch(Exception e1) {
			e1.printStackTrace();
		}
		
		
	} finally {
		
	}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
